LA1 ID (16 bits, padded to 32 bits) =
0x00008E09

LA2 ID (16 bits, padded to 32 bits) =
0x000059CE


i = 0
-----
j is randomly chosen in [1,20]

j (in range [1,20], padded to 32 bits) =
0x00000008

ls1(0) = AES key (128 bits) = randomly generated 128 bits 
0x4840ED221502D9AB6786BF68FBA9F210
 ls1_0[16] = 
{ 0x48, 0x40, 0xED, 0x22, 0x15, 0x02, 0xD9, 0xAB, 0x67, 0x86, 0xBF, 0x68, 0xFB, 0xA9, 0xF2, 0x10 }

AES input plaintext (128 bits) = 0^{64-bit} || la_id1^{32-bit} || j^{32-bit} = 
0x000000000000000000008E0900000008
 aes_in1_j[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x09, 0x00, 0x00, 0x00, 0x08 }

AES output (128 bits) = AES_ls1(0) (la_id1 || j)
0xB8513F61B3D2571E512D6D6FCE65BF73
 aes_out1_0_j[16] = 
{ 0xB8, 0x51, 0x3F, 0x61, 0xB3, 0xD2, 0x57, 0x1E, 0x51, 0x2D, 0x6D, 0x6F, 0xCE, 0x65, 0xBF, 0x73 }

plv1(0,j) = AES output XOR AES input (128 bits) = 
0xB8513F61B3D2571E512DE366CE65BF7B
 plv1_0_j[16] = 
{ 0xB8, 0x51, 0x3F, 0x61, 0xB3, 0xD2, 0x57, 0x1E, 0x51, 0x2D, 0xE3, 0x66, 0xCE, 0x65, 0xBF, 0x7B }

ls2(0) = AES key (128 bits) = randomly generated 128 bits 
0x6B71A7EB5755F16E89981D2189A6DAEA
 ls2_0[16] = 
{ 0x6B, 0x71, 0xA7, 0xEB, 0x57, 0x55, 0xF1, 0x6E, 0x89, 0x98, 0x1D, 0x21, 0x89, 0xA6, 0xDA, 0xEA }

AES input plaintext (128 bits) = 0^{64-bit} || la_id2^{32-bit} || j^{32-bit} = 
0x0000000000000000000059CE00000008
 aes_in2_j[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0xCE, 0x00, 0x00, 0x00, 0x08 }

AES output (128 bits) = AES_ls2(0) (la_id2 || j)
0x6B348660093E4AA0BA9D3F8CC11373E7
 aes_out2_0_j[16] = 
{ 0x6B, 0x34, 0x86, 0x60, 0x09, 0x3E, 0x4A, 0xA0, 0xBA, 0x9D, 0x3F, 0x8C, 0xC1, 0x13, 0x73, 0xE7 }

plv2(0,j) = AES output XOR AES input (128 bits) = 
0x6B348660093E4AA0BA9D6642C11373EF
 plv2_0_j[16] = 
{ 0x6B, 0x34, 0x86, 0x60, 0x09, 0x3E, 0x4A, 0xA0, 0xBA, 0x9D, 0x66, 0x42, 0xC1, 0x13, 0x73, 0xEF }

lv(0,j) = plv1(0,j) XOR plv2(0,j)
0xD365B901BAEC1DBEEBB085240F76CC94
 lv_0_j[16] = 
{ 0xD3, 0x65, 0xB9, 0x01, 0xBA, 0xEC, 0x1D, 0xBE, 0xEB, 0xB0, 0x85, 0x24, 0x0F, 0x76, 0xCC, 0x94 }


i = 1
-----
j is randomly chosen in [1,20]

j (in range [1,20], padded to 32 bits) =
0x00000006

SHA-256 input (128 bits) = la_id1^{32-bit} || ls1(0)^{128-bit} = 
0x00008E094840ED221502D9AB6786BF68FBA9F210
 sha256_in1_1[20] = 
{ 0x00, 0x00, 0x8E, 0x09, 0x48, 0x40, 0xED, 0x22, 0x15, 0x02, 0xD9, 0xAB, 0x67, 0x86, 0xBF, 0x68, 
  0xFB, 0xA9, 0xF2, 0x10 }

SHA-256 output (256 bits) = SHA-256(la_id1 || ls1(0))
0x252122f79925e92dceb7ae23f9712c9ad8a12310c7ede6c41fcad309d14b6916
 sha256_out1_1[32] = 
{ 0x25, 0x21, 0x22, 0xF7, 0x99, 0x25, 0xE9, 0x2D, 0xCE, 0xB7, 0xAE, 0x23, 0xF9, 0x71, 0x2C, 0x9A, 
  0xD8, 0xA1, 0x23, 0x10, 0xC7, 0xED, 0xE6, 0xC4, 0x1F, 0xCA, 0xD3, 0x09, 0xD1, 0x4B, 0x69, 0x16 }

ls1(1) = AES key (128 bits) = first 128 bits of SHA-256(la_id1 || ls1(0))
0x252122f79925e92dceb7ae23f9712c9a
 ls1_1[16] = 
{ 0x25, 0x21, 0x22, 0xF7, 0x99, 0x25, 0xE9, 0x2D, 0xCE, 0xB7, 0xAE, 0x23, 0xF9, 0x71, 0x2C, 0x9A }

AES input plaintext (128 bits) = 0^{64-bit} || la_id1^{32-bit} || j^{32-bit} = 
0x000000000000000000008E0900000006
 aes_in1_j[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x09, 0x00, 0x00, 0x00, 0x06 }

AES output (128 bits) = AES_ls1(1) (la_id1 || j)
0xAFFDC9A9EEBF4B05A78B1B944E3C9F98
 aes_out1_1_j[16] = 
{ 0xAF, 0xFD, 0xC9, 0xA9, 0xEE, 0xBF, 0x4B, 0x05, 0xA7, 0x8B, 0x1B, 0x94, 0x4E, 0x3C, 0x9F, 0x98 }

plv1(1,j) = AES output XOR AES input (128 bits) = 
0xAFFDC9A9EEBF4B05A78B959D4E3C9F9E
 plv1_1_j[16] = 
{ 0xAF, 0xFD, 0xC9, 0xA9, 0xEE, 0xBF, 0x4B, 0x05, 0xA7, 0x8B, 0x95, 0x9D, 0x4E, 0x3C, 0x9F, 0x9E }

SHA-256 input (128 bits) = la_id2^{32-bit} || ls2(0)^{128-bit} = 
0x000059CE6B71A7EB5755F16E89981D2189A6DAEA
 sha256_in2_1[20] = 
{ 0x00, 0x00, 0x59, 0xCE, 0x6B, 0x71, 0xA7, 0xEB, 0x57, 0x55, 0xF1, 0x6E, 0x89, 0x98, 0x1D, 0x21, 
  0x89, 0xA6, 0xDA, 0xEA }

SHA-256 output (256 bits) = SHA-256(la_id2 || ls2(0))
0xbddd9fd720c613432f4dae32e3574bcb3efec8ee0ec6e3de4a0eaaf5bbc22719
 sha256_out2_1[32] = 
{ 0xBD, 0xDD, 0x9F, 0xD7, 0x20, 0xC6, 0x13, 0x43, 0x2F, 0x4D, 0xAE, 0x32, 0xE3, 0x57, 0x4B, 0xCB, 
  0x3E, 0xFE, 0xC8, 0xEE, 0x0E, 0xC6, 0xE3, 0xDE, 0x4A, 0x0E, 0xAA, 0xF5, 0xBB, 0xC2, 0x27, 0x19 }

ls2(1) = AES key (128 bits) = first 128 bits of SHA-256(la_id2 || ls2(0))
0xbddd9fd720c613432f4dae32e3574bcb
 ls2_1[16] = 
{ 0xBD, 0xDD, 0x9F, 0xD7, 0x20, 0xC6, 0x13, 0x43, 0x2F, 0x4D, 0xAE, 0x32, 0xE3, 0x57, 0x4B, 0xCB }

AES input plaintext (128 bits) = 0^{64-bit} || la_id2^{32-bit} || j^{32-bit} = 
0x0000000000000000000059CE00000006
 aes_in2_j[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0xCE, 0x00, 0x00, 0x00, 0x06 }

AES output (128 bits) = AES_ls2(1) (la_id2 || j)
0x517044ACA1E61E1E3BD096713B77D7A1
 aes_out2_1_j[16] = 
{ 0x51, 0x70, 0x44, 0xAC, 0xA1, 0xE6, 0x1E, 0x1E, 0x3B, 0xD0, 0x96, 0x71, 0x3B, 0x77, 0xD7, 0xA1 }

plv2(1,j) = AES output XOR AES input (128 bits) = 
0x517044ACA1E61E1E3BD0CFBF3B77D7A7
 plv2_1_j[16] = 
{ 0x51, 0x70, 0x44, 0xAC, 0xA1, 0xE6, 0x1E, 0x1E, 0x3B, 0xD0, 0xCF, 0xBF, 0x3B, 0x77, 0xD7, 0xA7 }

lv(1,j) = plv1(1,j) XOR plv2(1,j)
0xFE8D8D054F59551B9C5B5A22754B4839
 lv_1_j[16] = 
{ 0xFE, 0x8D, 0x8D, 0x05, 0x4F, 0x59, 0x55, 0x1B, 0x9C, 0x5B, 0x5A, 0x22, 0x75, 0x4B, 0x48, 0x39 }

