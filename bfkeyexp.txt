"le": little-endian
"be": big-endian
Curve: NISTp256
---------------
i (32 bits):
0x217D79E1

j (in range [1,20], padded to 32 bits) =
0x00000011

Expanding Certificate key pair (a,A)
------------------------------------
ck: AES key (128 bits, randomly generated):
0x121D14216715E11D2D3787434A673B1B
[be] ck[16] = 
{ 0x12, 0x1D, 0x14, 0x21, 0x67, 0x15, 0xE1, 0x1D, 0x2D, 0x37, 0x87, 0x43, 0x4A, 0x67, 0x3B, 0x1B }

a: Signing seed private key (256 bits):
0xD418760F0CB2DCB856BC3C7217AD3AA36DB6742AE1DB655A3D28DF88CBBF84E1
[le] a[8] = 
{ 0xCBBF84E1, 0x3D28DF88, 0xE1DB655A, 0x6DB6742A, 0x17AD3AA3, 0x56BC3C72, 0x0CB2DCB8, 0xD418760F }

A: Signing seed public key (2*256 bits):
[0xee9cc7fbd9edecea41f7c8bd258e8d2e988e75bd069addca1e5a38e534ac6818L], [0x5ae3c8d9fe0b1fc7438f29417c240f8bf81c358ec1a4d0c6e98d8edbcc714017L]
[le] A = {
{ 0x34AC6818, 0x1E5A38E5, 0x069ADDCA, 0x988E75BD, 0x258E8D2E, 0x41F7C8BD, 0xD9EDECEA, 0xEE9CC7FB }
{ 0xCC714017, 0xE98D8EDB, 0xC1A4D0C6, 0xF81C358E, 0x7C240F8B, 0x438F2941, 0xFE0B1FC7, 0x5AE3C8D9 }
}

x_cert: Expansion function input for Certificate keys (128 bits):
0x00000000217D79E10000001100000000

x+1: Input to AES block 1 encryption (128 bits):
0x00000000217D79E10000001100000001
[be] xp1[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x21, 0x7D, 0x79, 0xE1, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x01 }

AES_k(x+1): Output of AES block 1 encryption (128 bits):
0xE2FA3CEE2898C48C9AEC05D42DBA31F9
[be] aes_xp1[16] = 
{ 0xE2, 0xFA, 0x3C, 0xEE, 0x28, 0x98, 0xC4, 0x8C, 0x9A, 0xEC, 0x05, 0xD4, 0x2D, 0xBA, 0x31, 0xF9 }

AES_k(x+1) XOR (x+1): block 1 (128 bits):
0xE2FA3CEE09E5BD6D9AEC05C52DBA31F8
[be] block_1[16] = 
{ 0xE2, 0xFA, 0x3C, 0xEE, 0x09, 0xE5, 0xBD, 0x6D, 0x9A, 0xEC, 0x05, 0xC5, 0x2D, 0xBA, 0x31, 0xF8 }

x+2: Input to AES block 2 encryption (128 bits):
0x00000000217D79E10000001100000002
[be] xp2[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x21, 0x7D, 0x79, 0xE1, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02 }

AES_k(x+2): Output of AES block 2 encryption (128 bits):
0xFCB039259766E299B321B8C780402A6C
[be] aes_xp2[16] = 
{ 0xFC, 0xB0, 0x39, 0x25, 0x97, 0x66, 0xE2, 0x99, 0xB3, 0x21, 0xB8, 0xC7, 0x80, 0x40, 0x2A, 0x6C }

AES_k(x+2) XOR (x+2): block 2 (128 bits):
0xFCB03925B61B9B78B321B8D680402A6E
[be] block_2[16] = 
{ 0xFC, 0xB0, 0x39, 0x25, 0xB6, 0x1B, 0x9B, 0x78, 0xB3, 0x21, 0xB8, 0xD6, 0x80, 0x40, 0x2A, 0x6E }

x+3: Input to AES block 3 encryption (128 bits):
0x00000000217D79E10000001100000003
[be] xp3[16] = 
{ 0x00, 0x00, 0x00, 0x00, 0x21, 0x7D, 0x79, 0xE1, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x03 }

AES_k(x+3): Output of AES block 3 encryption (128 bits):
0xA9A7FD2D8414C0396A0326F1A19873DE
[be] aes_xp3[16] = 
{ 0xA9, 0xA7, 0xFD, 0x2D, 0x84, 0x14, 0xC0, 0x39, 0x6A, 0x03, 0x26, 0xF1, 0xA1, 0x98, 0x73, 0xDE }

AES_k(x+3) XOR (x+3): block 3 (128 bits):
0xA9A7FD2DA569B9D86A0326E0A19873DD
[be] block_3[16] = 
{ 0xA9, 0xA7, 0xFD, 0x2D, 0xA5, 0x69, 0xB9, 0xD8, 0x6A, 0x03, 0x26, 0xE0, 0xA1, 0x98, 0x73, 0xDD }

f_k^{int}(x) = block1 || block2 || block3 (384 bits):
0xE2FA3CEE09E5BD6D9AEC05C52DBA31F8FCB03925B61B9B78B321B8D680402A6EA9A7FD2DA569B9D86A0326E0A19873DD
[be] f_k_int_x_cert[48] = 
{ 0xE2, 0xFA, 0x3C, 0xEE, 0x09, 0xE5, 0xBD, 0x6D, 0x9A, 0xEC, 0x05, 0xC5, 0x2D, 0xBA, 0x31, 0xF8, 
  0xFC, 0xB0, 0x39, 0x25, 0xB6, 0x1B, 0x9B, 0x78, 0xB3, 0x21, 0xB8, 0xD6, 0x80, 0x40, 0x2A, 0x6E, 
  0xA9, 0xA7, 0xFD, 0x2D, 0xA5, 0x69, 0xB9, 0xD8, 0x6A, 0x03, 0x26, 0xE0, 0xA1, 0x98, 0x73, 0xDD }

f_k(x) = f_k^{int}(x) mod l, where l is the order of the group of points on the curve (256 bits):
0x79081DDD31EF9E5EA601250E584CD90FBA13EE7B518E72A2DB3AAAA158E12D5E
[le] f_k_x_cert[8] = 
{ 0x58E12D5E, 0xDB3AAAA1, 0x518E72A2, 0xBA13EE7B, 0x584CD90F, 0xA601250E, 0x31EF9E5E, 0x79081DDD }

a + f_k(x_cert) mod l: Expanded private key (256 bits)
0x4D2093ED3EA27B15FCBD61806FFA13B36AE367F88C52397824A9BF67283D8CEE
[le] a_exp[8] = 
{ 0x283D8CEE, 0x24A9BF67, 0x8C523978, 0x6AE367F8, 0x6FFA13B3, 0xFCBD6180, 0x3EA27B15, 0x4D2093ED }

A + f_k(x_cert)*G_P26 mod l: Expanded public key (256 bits)
[0x2b18f3d93c4df3d9d1490e3a9ba5a0de9cfa73eddb95408bc1f2bf60cb3cf313L], [0x1a2ce511e0da86356329a5c22a36a8a53088dcb11a5a94fa903ef0087421666aL]
[le] A_exp = {
{ 0xCB3CF313, 0xC1F2BF60, 0xDB95408B, 0x9CFA73ED, 0x9BA5A0DE, 0xD1490E3A, 0x3C4DF3D9, 0x2B18F3D9 }
{ 0x7421666A, 0x903EF008, 0x1A5A94FA, 0x3088DCB1, 0x2A36A8A5, 0x6329A5C2, 0xE0DA8635, 0x1A2CE511 }
}

SUCCESS: Verified that expanded certificate private and public keys form a key pair

Expanding Encryption key pair (h,H)
-----------------------------------
ek: AES key (128 bits, randomly generated):
0xF9FCE2371B4523C0A75FC352BA7EBD8D
[be] ek[16] = 
{ 0xF9, 0xFC, 0xE2, 0x37, 0x1B, 0x45, 0x23, 0xC0, 0xA7, 0x5F, 0xC3, 0x52, 0xBA, 0x7E, 0xBD, 0x8D }

h: Signing seed private key (256 bits):
0x4624A6F9F6BC6BD088A71ED97B3AEE983B5CC2F574F64E96A531D2464137049F
[le] h[8] = 
{ 0x4137049F, 0xA531D246, 0x74F64E96, 0x3B5CC2F5, 0x7B3AEE98, 0x88A71ED9, 0xF6BC6BD0, 0x4624A6F9 }

H: Signing seed public key (2*256 bits):
[0x121aa495c6b2c07a2b2daec36bd207d6620d7e6081050df5de3e9696868fcdcaL], [0x46c31a1abea0bddaaaaefbba3afdbff1ac8d196bc313fc130926810c05503950L]
[le] H = {
{ 0x868FCDCA, 0xDE3E9696, 0x81050DF5, 0x620D7E60, 0x6BD207D6, 0x2B2DAEC3, 0xC6B2C07A, 0x121AA495 }
{ 0x05503950, 0x0926810C, 0xC313FC13, 0xAC8D196B, 0x3AFDBFF1, 0xAAAEFBBA, 0xBEA0BDDA, 0x46C31A1A }
}

x_enc: Expansion function input for Encryption keys (128 bits):
0xFFFFFFFF217D79E10000001100000000

x+1: Input to AES block 1 encryption (128 bits):
0xFFFFFFFF217D79E10000001100000001
[be] xp1[16] = 
{ 0xFF, 0xFF, 0xFF, 0xFF, 0x21, 0x7D, 0x79, 0xE1, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x01 }

AES_k(x+1): Output of AES block 1 encryption (128 bits):
0x0C94BE1DC5E20B54E023430539C4D241
[be] aes_xp1[16] = 
{ 0x0C, 0x94, 0xBE, 0x1D, 0xC5, 0xE2, 0x0B, 0x54, 0xE0, 0x23, 0x43, 0x05, 0x39, 0xC4, 0xD2, 0x41 }

AES_k(x+1) XOR (x+1): block 1 (128 bits):
0xF36B41E2E49F72B5E023431439C4D240
[be] block_1[16] = 
{ 0xF3, 0x6B, 0x41, 0xE2, 0xE4, 0x9F, 0x72, 0xB5, 0xE0, 0x23, 0x43, 0x14, 0x39, 0xC4, 0xD2, 0x40 }

x+2: Input to AES block 2 encryption (128 bits):
0xFFFFFFFF217D79E10000001100000002
[be] xp2[16] = 
{ 0xFF, 0xFF, 0xFF, 0xFF, 0x21, 0x7D, 0x79, 0xE1, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02 }

AES_k(x+2): Output of AES block 2 encryption (128 bits):
0x00315F3B0CA0744F7E9924A33E3EBEE9
[be] aes_xp2[16] = 
{ 0x00, 0x31, 0x5F, 0x3B, 0x0C, 0xA0, 0x74, 0x4F, 0x7E, 0x99, 0x24, 0xA3, 0x3E, 0x3E, 0xBE, 0xE9 }

AES_k(x+2) XOR (x+2): block 2 (128 bits):
0xFFCEA0C42DDD0DAE7E9924B23E3EBEEB
[be] block_2[16] = 
{ 0xFF, 0xCE, 0xA0, 0xC4, 0x2D, 0xDD, 0x0D, 0xAE, 0x7E, 0x99, 0x24, 0xB2, 0x3E, 0x3E, 0xBE, 0xEB }

x+3: Input to AES block 3 encryption (128 bits):
0xFFFFFFFF217D79E10000001100000003
[be] xp3[16] = 
{ 0xFF, 0xFF, 0xFF, 0xFF, 0x21, 0x7D, 0x79, 0xE1, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x03 }

AES_k(x+3): Output of AES block 3 encryption (128 bits):
0x6E44DD46D2CF22D1C981074A15FCDEDB
[be] aes_xp3[16] = 
{ 0x6E, 0x44, 0xDD, 0x46, 0xD2, 0xCF, 0x22, 0xD1, 0xC9, 0x81, 0x07, 0x4A, 0x15, 0xFC, 0xDE, 0xDB }

AES_k(x+3) XOR (x+3): block 3 (128 bits):
0x91BB22B9F3B25B30C981075B15FCDED8
[be] block_3[16] = 
{ 0x91, 0xBB, 0x22, 0xB9, 0xF3, 0xB2, 0x5B, 0x30, 0xC9, 0x81, 0x07, 0x5B, 0x15, 0xFC, 0xDE, 0xD8 }

f_k^{int}(x) = block1 || block2 || block3 (384 bits):
0xF36B41E2E49F72B5E023431439C4D240FFCEA0C42DDD0DAE7E9924B23E3EBEEB91BB22B9F3B25B30C981075B15FCDED8
[be] f_k_int_x_enc[48] = 
{ 0xF3, 0x6B, 0x41, 0xE2, 0xE4, 0x9F, 0x72, 0xB5, 0xE0, 0x23, 0x43, 0x14, 0x39, 0xC4, 0xD2, 0x40, 
  0xFF, 0xCE, 0xA0, 0xC4, 0x2D, 0xDD, 0x0D, 0xAE, 0x7E, 0x99, 0x24, 0xB2, 0x3E, 0x3E, 0xBE, 0xEB, 
  0x91, 0xBB, 0x22, 0xB9, 0xF3, 0xB2, 0x5B, 0x30, 0xC9, 0x81, 0x07, 0x5B, 0x15, 0xFC, 0xDE, 0xD8 }

f_k(x) = f_k^{int}(x) mod l, where l is the order of the group of points on the curve (256 bits):
0xA1559B337D59834B32E364376C9915028E92D9392D89D4315BDA481ADD3BA317
[le] f_k_x_enc[8] = 
{ 0xDD3BA317, 0x5BDA481A, 0x2D89D431, 0x8E92D939, 0x6C991502, 0x32E36437, 0x7D59834B, 0xA1559B33 }

h + f_k(x_enc) mod l: Expanded private key (256 bits)
0xE77A422D7415EF1BBB8A8310E7D4039AC9EF9C2EA28022C8010C1A611E72A7B6
[le] h_exp[8] = 
{ 0x1E72A7B6, 0x010C1A61, 0xA28022C8, 0xC9EF9C2E, 0xE7D4039A, 0xBB8A8310, 0x7415EF1B, 0xE77A422D }

H + f_k(x_enc)*G_P26 mod l: Expanded public key (256 bits)
[0xb568fd55a7114254118e7463e85459bdd3c091342625b4a929541151bb8286beL], [0xed8dbe22200353d316cc5c3d8f1f281d8bfb34a9e6e1dbfe2043d928c64b430bL]
[le] H_exp = {
{ 0xBB8286BE, 0x29541151, 0x2625B4A9, 0xD3C09134, 0xE85459BD, 0x118E7463, 0xA7114254, 0xB568FD55 }
{ 0xC64B430B, 0x2043D928, 0xE6E1DBFE, 0x8BFB34A9, 0x8F1F281D, 0x16CC5C3D, 0x200353D3, 0xED8DBE22 }
}

SUCCESS: Verified that expanded encryption private and public keys form a key pair

